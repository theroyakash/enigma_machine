# -*- coding: utf-8 -*-
"""Enigma Machine.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GMd7LAdNLKZbuXIZN9Sh5eSVGpsqsbjW
"""

alphabets = [chr(y) for y in range(32, 126)]   # List of all characters in US Keyboard
gear_one = [y for y in range(len(alphabets))]  # Gear I
gear_two = [y for y in range(len(alphabets))]  # Gear II
gear_three = [y for y in range(len(alphabets))]  # Gear III
reflector = [y for y in reversed(range(len(alphabets)))]  # Reflector
code = []
gear_one_pos = gear_two_pos = gear_three_pos = 0


def rotator():
    global gear_one_pos
    global gear_two_pos
    global gear_three_pos
    i = gear_one[0]
    gear_one.append(i)
    del gear_one[0]
    gear_one_pos += 1
    if gear_one_pos % int(len(alphabets)) == 0:
        i = gear_two[0]
        gear_two.append(i)
        del gear_two[0]
        gear_two_pos += 1
        if gear_two_pos % int(len(alphabets)) == 0:
            i = gear_three[0]
            gear_three.append(i)
            del gear_three[0]
            gear_three_pos += 1


def engine(input_character):
    target = alphabets.index(input_character)
    target = gear_one[target]
    target = gear_two[target]
    target = gear_three[target]
    target = reflector[target]
    target = gear_three.index(target)
    target = gear_two.index(target)
    target = gear_one.index(target)
    code.append(alphabets[target])
    rotator()


if __name__ == "__main__":
    decode = input("Type your message:\n")
    decode = list(decode)
    while True:
        try:
            token = int(input("Please set token:(numerical values only)\n"))
            break
        except Exception as error:
            print(error)
    for y in range(token):
        rotator()
    for z in decode:
        engine(z)
    print("\n" + "".join(code))
    print(
        f"\nYour Token is {token}. Please jot your token down."
        f"If you Want to decode this message later input the Encoded message and write the token"
    )
